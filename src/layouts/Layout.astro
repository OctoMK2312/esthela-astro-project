---
interface Props {
  title: string;
  nombreNovia: string;
}

const { title, nombreNovia } = Astro.props;
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Una sorpresa para ti" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>

    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400..900;1,400..900&family=Poppins:wght@300;400&display=swap"
      rel="stylesheet"
    />

    <link rel="stylesheet" href="/src/styles/global.css" />
  </head>
  <body>
    <slot />
    <script>
      // Este script observa los elementos que tienen la clase 'animate-on-scroll'
      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            // Cuando un elemento entra en la pantalla, le añade la clase 'visible'
            if (entry.isIntersecting) {
              entry.target.classList.add("visible");
            }
          });
        },
        { threshold: 0.1 } // La animación se dispara cuando el 10% del elemento es visible
      );

      // Le decimos al observador que vigile a todos los elementos con esa clase
      const elementsToAnimate = document.querySelectorAll(".animate-on-scroll");
      elementsToAnimate.forEach((el) => observer.observe(el));
    </script>
  </body>
</html>
